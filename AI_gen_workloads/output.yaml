---

type: YUGABYTE
driver: com.yugabyte.Driver
url: jdbc:yugabytedb://{endpoint}:5433/yugabyte?sslmode=require&ApplicationName=featurebench&reWriteBatchedInserts=true&load-balance=true
username: {username}
password: {password}
batchsize: 128
isolation: TRANSACTION_REPEATABLE_READ
loaderthreads: 1
terminals: 1
collect_pg_stat_statements: true
yaml_version: v1.0
use_dist_in_explain: true
works:
    work:
        time_secs: 300
        rate: unlimited
        warmup: 60
microbenchmark:
    class: com.oltpbenchmark.benchmarks.featurebench.customworkload.YBDefaultMicroBenchmark
    properties:
        setAutoCommit: true
        create:
            - drop table IF EXISTS test_table;
            - create table test_table(id int primary key, name varchar(20), value int, category varchar(20));
            - create index composite_index on test_table(value, category);

        cleanup:
            - drop table IF EXISTS test_table;

        loadRules:
            - table: test_table
              count: 1
              rows: 100000
              columns:
                    - name: id
                      count: 1
                      util: PrimaryIntGen
                      params: [1, 100000]
                    - name: name
                      count: 1
                      util: RandomAString
                      params: [5, 20]
                    - name: value
                      count: 1
                      util: RandomInt
                      params: [1, 1000]
                    - name: category
                      count: 1
                      util: OneStringFromArray
                      params: [['A', 'B', 'C', 'D']]

        executeRules:
            - workload: index_scan_workload
              time_secs: 120
              run:
                  - name: scan_test
                    weight: 100
                    queries:
                        - query: select * from test_table where value > ? and category = ? limit 100;
                          bindings:
                            - util: RandomInt
                              params: [1, 1000]
                            - util: OneStringFromArray
                              params: [['A', 'B', 'C', 'D']]